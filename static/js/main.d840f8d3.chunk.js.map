{"version":3,"sources":["reducers/albumsReducer.js","reducers/index.js","actions/types.js","store.js","actions/albumsActions.js","containers/Hashtags.js","components/AddHashtagForm.js","components/Photos.js","components/NavList.js","components/SearchForm.js","components/Gallery.js","App.js","serviceWorker.js","index.js"],"names":["initialState","albums","photos","combineReducers","gallery","state","arguments","length","undefined","action","type","Object","objectSpread","toConsumableArray","map","e","i","id","photoId","hashtagArr","concat","hashtag","middleware","thunk","store","createStore","rootreducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","fetchPhotos","albumId","dispatch","fetch","then","resp","json","forEach","Hashtags","props","react_default","a","createElement","className","hashtags","href","key","AddHashtagForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","bind","assertThisInitialized","onChange","search","setState","target","value","preventDefault","hashtagObj","addHashtag","name","placeholder","Component","connect","tagObj","Photos","url","title","src","alt","containers_Hashtags","setKey","components_AddHashtagForm","NavList","onClick","SearchForm","filter","document","querySelector","childNodes","regExp","RegExp","hasHashtag","some","classList","remove","add","Gallery","fetchAlbums","components_NavList","components_SearchForm","components_Photos","App","es","components_Gallery","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d840f8d3.chunk.js","sourcesContent":["import { FETCH_ALBUMS, FETCH_PHOTOS, ADD_HASHTAG } from '../actions/types';\r\n\r\nconst initialState = { albums: [], photos: [] };\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALBUMS:\r\n      return {\r\n        ...state,\r\n        albums: action.albums\r\n      };\r\n    case FETCH_PHOTOS:\r\n      return {\r\n        ...state,\r\n        photos: action.photos\r\n      };\r\n    case ADD_HASHTAG:\r\n      return {\r\n        ...state,\r\n        photos: [\r\n          ...state.photos.map((e, i) => {\r\n            if (e.id === action.photoId) {\r\n              return {\r\n                ...e,\r\n                hashtagArr: [...state.photos[i].hashtagArr, action.hashtag]\r\n              };\r\n            }\r\n\r\n            return e;\r\n          })\r\n        ]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport cardReducer from './albumsReducer';\r\n\r\nexport default combineReducers({\r\n  gallery: cardReducer\r\n})\r\n","export const FETCH_ALBUMS = 'FETCH_ALBUMS';\r\nexport const FETCH_PHOTOS = 'FETCH_PHOTOS';\r\nexport const ADD_HASHTAG = 'ADD_HASHTAG';","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootreducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootreducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import { FETCH_ALBUMS, FETCH_PHOTOS, ADD_HASHTAG } from './types';\r\n\r\nexport const fetchAlbums = () => dispatch => {\r\n  fetch('https://jsonplaceholder.typicode.com/albums?userId=1')\r\n    .then(resp => resp.json())\r\n    .then( albums => {\r\n      dispatch({\r\n        type: FETCH_ALBUMS,\r\n        albums: albums\r\n      })\r\n    })\r\n}\r\n\r\nexport const fetchPhotos = albumId => dispatch => {\r\n  fetch(`https://jsonplaceholder.typicode.com/photos?albumId=${albumId}`)\r\n    .then(resp => resp.json())\r\n    .then( photos => {\r\n      photos.forEach(e => e.hashtagArr = []);\r\n\r\n      dispatch({\r\n        type: FETCH_PHOTOS,\r\n        photos: photos\r\n      })\r\n    })\r\n}\r\n\r\nexport const addHashtag = tagObj => dispatch => {\r\n  const { hashtag, photoId } = tagObj;\r\n  \r\n  dispatch({\r\n    type: ADD_HASHTAG,\r\n    hashtag: hashtag,\r\n    photoId: photoId\r\n  })\r\n}","import React from 'react';\r\n\r\nconst Hashtags = (props) => {  \r\n  return (\r\n    <div className=\"hashtag\">\r\n      { props.hashtags.map((e,i) => <a className=\"hashtag__link\" href=\"#\" key={ i }>#{ e }</a>) }\r\n    </div>\r\n  );  \r\n}\r\n\r\nexport default Hashtags;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addHashtag } from '../actions/albumsActions';\r\n\r\nclass AddHashtagForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.state = { \r\n      search: ''\r\n    };\r\n  }\r\n\r\n  onChange(e) {    \r\n    this.setState({ search: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const search = this.state.search,\r\n      id = this.props.id,\r\n      hashtagObj = { \r\n        hashtag: search, \r\n        photoId: id\r\n      };\r\n\r\n    this.props.addHashtag(hashtagObj);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"hashtags-form\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <input className=\"hashtags-form__input\" onChange={ this.onChange } name=\"search\" placeholder=\"Search photos\"/> \r\n          <button className=\"hashtags-form__btn\" type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { addHashtag })(AddHashtagForm);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPhotos } from '../actions/albumsActions';\r\nimport Hashtags from '../containers/Hashtags';\r\nimport AddHashtagForm from './AddHashtagForm';\r\n\r\nclass Photos extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchPhotos(1);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"photos-block\">       \r\n        {this.props.photos.map(e => {\r\n          const { id, url, title, hashtagArr } = e;\r\n          \r\n          return (\r\n            <div className=\"photos-block__photo-container\" key={ id }>\r\n              <img className=\"photos-block__photo\" src={ url } alt={ title }/>\r\n              <Hashtags setKey={ id } hashtags={ hashtagArr }/>\r\n              <AddHashtagForm id={ id }/>        \r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  photos: state.gallery.photos  \r\n});\r\n\r\nexport default connect( mapStateToProps, { fetchPhotos })(Photos);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPhotos } from '../actions/albumsActions';\r\n\r\nclass NavList extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"nav-list\">\r\n        <li className=\"nav-list__elem\">\r\n          Albums list\r\n          <ul className=\"nav-list__embed-albums-list\">\r\n            { this.props.albums.map(e => {\r\n              const { id, title } = e;\r\n              return (\r\n                <li\r\n                  className=\"nav-list__embed-albums-list-elem\"\r\n                  key={ id }\r\n                  onClick={ this.props.fetchPhotos.bind(null, id) }\r\n                >\r\n                  <button className=\"nav-list__embed-albums-list-link\" href=\"#\">{ title }</button>\r\n                </li>\r\n              );\r\n            }) }\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  albums: state.gallery.albums,\r\n  photos: state.gallery.photos\r\n});\r\n\r\nexport default connect( mapStateToProps, { fetchPhotos })(NavList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass SearchForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.state = {\r\n      filter: \"\"\r\n    };\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ filter: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const photos = document.querySelector(\".photos-block\").childNodes;\r\n    const filter = this.state.filter;\r\n    const regExp = new RegExp(`(${filter})`, \"i\");\r\n\r\n    this.props.photos.forEach((e, i) => {\r\n      const title = e.title;\r\n\r\n      const hasHashtag = e.hashtagArr.some(e => {        \r\n        return e.search(filter) !== -1;        \r\n      });\r\n\r\n      if (title.search(regExp) !== -1 || hasHashtag) {\r\n        photos[i].classList.remove(\"photos-block__photo-container--hidden\");\r\n      } else {\r\n        photos[i].classList.add(\"photos-block__photo-container--hidden\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-form__search\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <input\r\n            onChange={this.onChange}\r\n            value={this.state.filter}\r\n            className=\"search-form__search-input\"\r\n            type=\"search\"\r\n            name=\"search\"\r\n            placeholder=\"Search photos\"\r\n          />\r\n          <input\r\n            className=\"search-form__search-btn\"\r\n            type=\"submit\"\r\n            value=\"Search\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  photos: state.gallery.photos\r\n});\r\n\r\nexport default connect(mapStateToProps)(SearchForm);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchAlbums, fetchPhotos } from '../actions/albumsActions';\r\nimport Photos from './Photos';\r\nimport NavList from './NavList';\r\nimport SearchForm from './SearchForm';\r\n\r\nclass Gallery extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchAlbums();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"header\">\r\n          <div className=\"header__container\">\r\n            <nav>\r\n              <NavList/>\r\n            </nav>\r\n            <SearchForm/>\r\n          </div>\r\n        </header>        \r\n        <Photos />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  albums: state.gallery.albums,\r\n  photos: state.gallery.photos\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchAlbums, fetchPhotos })(Gallery)","import React, { Component } from 'react';\nimport './scss/main.scss';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Gallery from './components/Gallery';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={ store }>        \n          <Gallery/>        \n      </Provider>      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}